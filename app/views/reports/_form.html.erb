<%= form_with(model: report) do |form| %>
  <%= render "shared/error_messages", resource: form.object %>

  <div class="form-group">
    <%= form.label :title %>
    <%= form.text_field :title, placeholder: true, required: true, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= form.label :location %>
    <%= form.text_field :location, placeholder: true, required: true, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= form.label :term %>
    <%= form.text_field :term, placeholder: true, required: true, data: { 
      controller: 'static-select',
      'static-select-label-value': 'title',
      'static-select-value-value': 'title',
      'static-select-options-value': @terms
    } %>
  </div>

  <div class="form-group">
    <%= form.label :report_type %>
    <%= form.select :report_type, Report.report_types.keys.map { |key| [key.titleize, key] }, { prompt: true }, class: "form-control" %>
  </div>

  <div class="flex justify-between form-group">
    <%= form.button class: "btn btn-primary" %>

    <% if report.persisted? && !report.personal? %>
      <%= link_to t("delete"), report, class: "btn btn-danger btn-outline", data: { turbo_method: :delete, turbo_confirm: t("are_you_sure") } %>
    <% end %>
  </div>

  <script>
    let hasEditedTitleManually = false;

    // if the title is empty, fill it out based on the location and term as those change
    document.addEventListener("turbo:load", () => {
      const name = document.querySelector("#report_name");
      const location = document.querySelector("#report_location");
      const term = document.querySelector("#report_term");

      const updateName = () => {
        if (!hasEditedTitleManually) {
          if (term.value.trim().length && location.value.trim().length) {
            name.value = `${term.value} - ${location.value}`;
          }
        }
      };

      location.addEventListener("input", updateName);
      term.addEventListener("input", updateName);

      // once the title has been focused at all, don't auto-fill it anymore
      name.addEventListener("focus", () => {
        hasEditedTitleManually = true;

        // remove the event listeners
        location.removeEventListener("input", updateName);
        term.removeEventListener("input", updateName);
      });
    });
  </script>
<% end %>
